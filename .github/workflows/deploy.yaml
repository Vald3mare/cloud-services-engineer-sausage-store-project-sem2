name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_BASE_URL }}/repository/sausage-store-helm-vald3mar
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: ${{ secrets.SAUSAGE_STORE_NAMESPACE }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

jobs:
  # Сборка и пуш образов в докерхаб:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            # Хорошо ли держать логин и пароль прямо в коде workflow?
            # Нет, это нехорошо. Хранить пароль надо в Secrets.
        - name: Push Backend to DockerHub
          # Одновременный билд и пуш образа в Docker Hub:
          uses: docker/build-push-action@v4
          with:
            # Параметр context: ./backend/ указывает, что нужный Dockerfile 
            # находится в ./backend/
            context: ./backend/
            # Параметр push: true указывает, что образ нужно не только собрать,
            # но и отправить на Docker Hub:
            push: true
            # В параметре tags задаётся название и тег для образа.
            # Для каждого пересобранного образа 
            # устанавливаем тег latest, чтобы потом
            # на сервере и в docker-compose.yml не указывать версию образа:
            tags: ${{ secrets.DOCKER_USERNAME }}/sausage-backend:latest
            build-args: |
              VERSION=${{ github.sha }}
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/sausage-frontend:latest
        - name: Push Backend-report to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend-report/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/sausage-backend-report:latest
  # Упаковываем helm-чарт и пушим его в Nexus 
  add_helm_chart_to_nexus:
      name: Add Helm Chart To Nexus
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub

      steps:
        - uses: actions/checkout@v3

        - name: Set up Helm
          uses: azure/setup-helm@v3
          with:
            version: v3.12.0

        - name: Package Helm chart
          run: |
            helm dependency update ./sausage-store-chart/
            helm package ./sausage-store-chart/ -d ./packeged/

        - name: Push Helm chart to Nexus
          run: |
            CHART_FULL_PATH=$(ls ./packeged/*.tgz)
            CHART_FILE_NAME=$(basename $CHART_FULL_PATH)
            curl -u "$NEXUS_HELM_REPO_USER:$NEXUS_HELM_REPO_PASSWORD" \
            --upload-file "$CHART_FULL_PATH" \
            "$NEXUS_HELM_REPO/$CHART_FILE_NAME"

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
      name: Deploy Helm Chart To Kubernetes
      runs-on: ubuntu-latest
      needs: add_helm_chart_to_nexus

      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Set up Helm
          uses: azure/setup-helm@v3
          with:
            version: v3.12.0
            
        - name: Set Kubeconfig (Настройка доступа к кластеру)
          run: |
            echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
            export KUBECONFIG=kubeconfig.yaml
            chmod 600 kubeconfig.yaml
            kubectl config get-contexts # Проверка контекста

        - name: Add Nexus Helm Repository
          run: |
            helm repo add sausage-nexus ${{ env.NEXUS_HELM_REPO }} \
              --username ${{ env.NEXUS_HELM_REPO_USER }} \
              --password ${{ env.NEXUS_HELM_REPO_PASSWORD }}
            helm repo update

        - name: Deploy Helm Chart (Установка/Обновление релиза)
          run: |
            export KUBECONFIG=kubeconfig.yaml 
            
            # Обновление репозитория
            helm repo update
            
            # Финальный деплой
            helm upgrade --install sausage-store sausage-nexus/sausage-store-chart \
              --namespace ${{ env.SAUSAGE_STORE_NAMESPACE }} \
              --create-namespace \
              --set frontend.fqdn=front-vald3mar.2sem.students-projects.ru \
              --set frontend.image.repository=${{ secrets.DOCKER_USERNAME }}/sausage-frontend \
              --set frontend.image.tag=1.0.0 \
              --set backend.image.repository=${{ secrets.DOCKER_USERNAME }}/sausage-backend \
              --set backend.image.tag=1.0.0 \
              --set backend-report.image.repository=${{ secrets.DOCKER_USERNAME }}/sausage-backend-report \
              --set backend-report.image.tag=1.0.0
